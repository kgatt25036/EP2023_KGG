@model Presentation.Models.ViewModels.CreateTicketViewModel

@{
    ViewData["Title"] = "CreateTicket";
}

<h1>CreateTicket</h1>

<h4>CreateTicketViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateTicket">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="SeatRow" class="control-label">Seat Row</label>
                <input asp-for="SeatRow" class="form-control" />
                <span asp-validation-for="SeatRow" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SeatColumn" class="control-label">Seat Column</label>
                <input asp-for="SeatColumn" class="form-control" />
                <span asp-validation-for="SeatColumn" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="FlightIdFK" class="control-label">Flight ID</label>
                <input asp-for="FlightIdFK" class="form-control" readonly />
                <span asp-validation-for="FlightIdFK" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Passport" class="control-label"></label>
                <input asp-for="Passport" class="form-control" />
                <span asp-validation-for="Passport" class="text-danger"></span>
            </div>
            <th>
                Price to be paid:
            </th>
        <dd class="col-sm-10">
                @Html.DisplayFor(model => model.price)
        </dd>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="PricePaid" /> @Html.DisplayNameFor(model => model.PricePaid)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Cancelled" /> @Html.DisplayNameFor(model => model.Cancelled)
                </label>
            </div>
            
            @for (var i = 1; i <= Model.Flight.SeatRows; i++)
            {
                <div class="row">
                    @for (var j = 1; j <= Model.Flight.SeatColumns; j++)
                    {
                        <div class="col">
                            <button>@i,@j</button>@*add onclick here to update row and column*@
                        </div>
                    }
                    <br />
                </div>
            }

            <div class="form-group">
                <input id="submitButton" type="submit" value="Create" class="btn btn-primary" @(!Model.PricePaid ? "disabled" : "") />
            </div>
        </form>
    </div>
</div>

<div style="margin-top: 5px;">
    <form asp-controller="Tickets" asp-action="ShowFlights" method="get">
        <button type="submit" class="btn btn-primary">Back to List</button>
    </form>
</div>

<script>
    function getSeatingPlan(flightId) {
        $.get("/Tickets/GetSeatingPlan?flightId=" + flightId, function (data) {
            // Assuming data is an object with SeatRows and SeatColumns properties
            var seatingPlanHtml = "Seating Plan: " + data.SeatRows + " rows x " + data.SeatColumns + " columns";
            $("#seatingPlan").html(seatingPlanHtml);

            // Generate buttons for each seat
            generateSeatButtons(data.SeatRows, data.SeatColumns);
        });
    }

    function generateSeatButtons(rows, columns) {
        var seatingButtons = "";

        for (var i = 1; i <= rows; i++) {
            for (var j = 1; j <= columns; j++) {
                // Create a button for each seat
                seatingButtons += "<button type='button' class='btn btn-secondary seat-button' data-row='" + i + "' data-column='" + j + "'>" + i + "-" + j + "</button> ";
            }
            seatingButtons += "<br />";
        }

        $("#seatingPlan").append(seatingButtons);

        // Attach click event to seat buttons
        $(".seat-button").click(function () {
            var row = $(this).data("row");
            var column = $(this).data("column");

            // Update SeatRow and SeatColumn fields in the form
            $("#SeatRow").val(row);
            $("#SeatColumn").val(column);

            // Optionally, you can visually highlight the selected seat
            $(".seat-button").removeClass("selected-seat");
            $(this).addClass("selected-seat");
        });
    }

    $(document).ready(function () {
        // Call the method with the initial flight ID (replace with actual flight ID)
        getSeatingPlan("FlightIdFK");

        $('#PricePaid').change(function () {
            updateButtonState();
        });

        updateButtonState();

        function updateButtonState() {
            var pricePaid = $('#PricePaid').is(':checked');
            $('#submitButton').prop('disabled', !pricePaid);
        }
    });
</script>
